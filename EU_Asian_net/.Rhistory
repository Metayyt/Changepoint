bhat=ahat
Xlead=X_reduced[2:n_reduced,,]
for(j in 1:p_reduced){
for(k in j:p_reduced){
ahat[j,k]=sum(Xlead[,j,k]*(1-X_reduced[1:(n_reduced-1),j,k]))/(sum(1-X_reduced[1:(n_reduced-1),j,k])+.0001)
bhat[j,k]=sum((1-Xlead[,j,k])*X_reduced[1:(n_reduced-1),j,k])/(sum(X_reduced[1:(n_reduced-1),j,k])+.0001)
}
}
ahat=(ahat+t(ahat))-diag(diag(ahat))
bhat=(bhat+t(bhat))-diag(diag(bhat))
q=2
# Cluster
W1=ahat
W2=1-bhat
W1=W1-diag(diag(W1))
W2=W2-diag(diag(W2))
D1=apply(W1,1,sum)
D2=apply(W2,1,sum)
L1=diag(1/sqrt(D1+.000001))%*%W1%*%diag(1/sqrt(D1+.000001))
L2=diag(1/sqrt(D2+.000001))%*%W2%*%diag(1/sqrt(D2+.000001))
ev = eigen( L1 + L2  )
# Sort eigenvalues by absolute value
sorted_indices = order(abs(ev$values), decreasing = TRUE)
gamma = ev$vectors[, sorted_indices[1:q]]
km = kmeans(gamma, centers = q  , nstart = 1000)
nuhat = km$cluster
#
gamma=ev$vector[,1:q]
km<-kmeans(gamma,centers = q,nstart=100)
nuhat=km$cluster
which(nuhat==2)
cluster_1_size = sum(nuhat == 1)
cluster_2_size = sum(nuhat == 2)
cluster_3_size = sum(nuhat == 3)
# 重新映射 non_zero_cols 中的顺序
non_zero_order = non_zero_cols[order(nuhat)]  # 基于聚类顺序
# 将 zero_cols 放在最后
final_order = c(non_zero_order, zero_cols)
# 重新计算完整的 adj_aver
adj_aver_complete = adj_a / (dim(X)[1])
# 绘制热图
library(viridis)
library(RColorBrewer)
colors <- brewer.pal(9, "YlOrBr")
newa = melt(adj_aver_complete[final_order, final_order])
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
#heatmap_plot
# 添加分界线，圈出 clusters
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + 0.5, xend = cluster_1_size + 0.5, y = 0.5, yend = p + 0.5), linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + 0.5, yend = cluster_1_size + 0.5), linetype = "solid", color = "black", size = 1)
# 对 cluster 2 和 cluster 3 添加相同的分界线
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + cluster_2_size + 0.5, xend = cluster_1_size + cluster_2_size + 0.5, y = 0.5, yend = p + 0.5), linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + cluster_2_size + 0.5, yend = cluster_1_size + cluster_2_size + 0.5), linetype = "solid", color = "black", size = 1)
# 打印热图
print(heatmap_plot)
q=3
# Cluster
W1=ahat
W2=1-bhat
W1=W1-diag(diag(W1))
W2=W2-diag(diag(W2))
D1=apply(W1,1,sum)
D2=apply(W2,1,sum)
L1=diag(1/sqrt(D1+.000001))%*%W1%*%diag(1/sqrt(D1+.000001))
L2=diag(1/sqrt(D2+.000001))%*%W2%*%diag(1/sqrt(D2+.000001))
ev = eigen( L1 + L2  )
# Sort eigenvalues by absolute value
sorted_indices = order(abs(ev$values), decreasing = TRUE)
gamma = ev$vectors[, sorted_indices[1:q]]
km = kmeans(gamma, centers = q  , nstart = 1000)
nuhat = km$cluster
#
gamma=ev$vector[,1:q]
km<-kmeans(gamma,centers = q,nstart=100)
nuhat=km$cluster
which(nuhat==2)
cluster_1_size = sum(nuhat == 1)
cluster_2_size = sum(nuhat == 2)
cluster_3_size = sum(nuhat == 3)
# 重新映射 non_zero_cols 中的顺序
non_zero_order = non_zero_cols[order(nuhat)]  # 基于聚类顺序
# 将 zero_cols 放在最后
final_order = c(non_zero_order, zero_cols)
# 重新计算完整的 adj_aver
adj_aver_complete = adj_a / (dim(X)[1])
# 绘制热图
library(viridis)
library(RColorBrewer)
colors <- brewer.pal(9, "YlOrBr")
newa = melt(adj_aver_complete[final_order, final_order])
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
#heatmap_plot
# 添加分界线，圈出 clusters
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + 0.5, xend = cluster_1_size + 0.5, y = 0.5, yend = p + 0.5), linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + 0.5, yend = cluster_1_size + 0.5), linetype = "solid", color = "black", size = 1)
# 对 cluster 2 和 cluster 3 添加相同的分界线
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + cluster_2_size + 0.5, xend = cluster_1_size + cluster_2_size + 0.5, y = 0.5, yend = p + 0.5), linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + cluster_2_size + 0.5, yend = cluster_1_size + cluster_2_size + 0.5), linetype = "solid", color = "black", size = 1)
# 打印热图
print(heatmap_plot)
q=2
# Cluster
W1=ahat
W2=1-bhat
W1=W1-diag(diag(W1))
W2=W2-diag(diag(W2))
D1=apply(W1,1,sum)
D2=apply(W2,1,sum)
L1=diag(1/sqrt(D1+.000001))%*%W1%*%diag(1/sqrt(D1+.000001))
L2=diag(1/sqrt(D2+.000001))%*%W2%*%diag(1/sqrt(D2+.000001))
ev = eigen( L1 + L2  )
# Sort eigenvalues by absolute value
sorted_indices = order(abs(ev$values), decreasing = TRUE)
gamma = ev$vectors[, sorted_indices[1:q]]
km = kmeans(gamma, centers = q  , nstart = 1000)
nuhat = km$cluster
#
gamma=ev$vector[,1:q]
km<-kmeans(gamma,centers = q,nstart=100)
nuhat=km$cluster
which(nuhat==2)
cluster_1_size = sum(nuhat == 1)
cluster_2_size = sum(nuhat == 2)
cluster_3_size = sum(nuhat == 3)
# 重新映射 non_zero_cols 中的顺序
non_zero_order = non_zero_cols[order(nuhat)]  # 基于聚类顺序
# 将 zero_cols 放在最后
final_order = c(non_zero_order, zero_cols)
# 重新计算完整的 adj_aver
adj_aver_complete = adj_a / (dim(X)[1])
# 绘制热图
library(viridis)
library(RColorBrewer)
colors <- brewer.pal(9, "YlOrBr")
newa = melt(adj_aver_complete[final_order, final_order])
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
#heatmap_plot
# 添加分界线，圈出 clusters
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + 0.5, xend = cluster_1_size + 0.5, y = 0.5, yend = p + 0.5), linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + 0.5, yend = cluster_1_size + 0.5), linetype = "solid", color = "black", size = 1)
# 对 cluster 2 和 cluster 3 添加相同的分界线
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + cluster_2_size + 0.5, xend = cluster_1_size + cluster_2_size + 0.5, y = 0.5, yend = p + 0.5), linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + cluster_2_size + 0.5, yend = cluster_1_size + cluster_2_size + 0.5), linetype = "solid", color = "black", size = 1)
# 打印热图
print(heatmap_plot)
# 将 zero_cols 放在最后
final_order = non_zero_order
# 重新计算完整的 adj_aver
adj_aver_complete = adj_a / (dim(X)[1])
# 绘制热图
library(viridis)
library(RColorBrewer)
colors <- brewer.pal(9, "YlOrBr")
newa = melt(adj_aver_complete[final_order, final_order])
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
# 添加分界线，圈出 clusters
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + 0.5, xend = cluster_1_size + 0.5, y = 0.5, yend = p + 0.5), linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + 0.5, yend = cluster_1_size + 0.5), linetype = "solid", color = "black", size = 1)
# 对 cluster 2 和 cluster 3 添加相同的分界线
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + cluster_2_size + 0.5, xend = cluster_1_size + cluster_2_size + 0.5, y = 0.5, yend = p + 0.5), linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + cluster_2_size + 0.5, yend = cluster_1_size + cluster_2_size + 0.5), linetype = "solid", color = "black", size = 1)
# 打印热图
print(heatmap_plot)
newa
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
# 添加分界线，圈出 clusters
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + 0.5, xend = cluster_1_size + 0.5, y = 0.5, yend = p + 0.5), linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + 0.5, yend = cluster_1_size + 0.5), linetype = "solid", color = "black", size = 1)
# 打印热图
print(heatmap_plot)
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
# 打印热图
print(heatmap_plot)
# 添加分界线，圈出 clusters
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + 0.5, xend = cluster_1_size + 0.5, y = 0.5, yend = p + 0.5), linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + 0.5, yend = cluster_1_size + 0.5), linetype = "solid", color = "black", size = 1)
# 打印热图
print(heatmap_plot)
# 绘制热图
library(viridis)
library(RColorBrewer)
colors <- brewer.pal(9, "YlOrBr")
newa = melt(adj_aver_complete[final_order, final_order])
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
#heatmap_plot
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + 0.5, xend = cluster_1_size + 0.5, y = 0.5, yend = p + 0.5),
linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + 0.5, yend = cluster_1_size + 0.5),
linetype = "solid", color = "black", size = 1)
# 对 cluster 2 和 cluster 3 添加相同的分界线
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + cluster_2_size + 0.5, xend = cluster_1_size + cluster_2_size + 0.5, y = 0.5, yend = p + 0.5), linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + cluster_2_size + 0.5, yend = cluster_1_size + cluster_2_size + 0.5), linetype = "solid", color = "black", size = 1)
# 打印热图
print(heatmap_plot)
# 绘制热图
library(viridis)
library(RColorBrewer)
colors <- brewer.pal(9, "YlOrBr")
newa = melt(adj_aver_complete[final_order, final_order])
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
#heatmap_plot
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + 0.5, xend = cluster_1_size + 0.5, y = 0.5, yend = p),
linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + 0.5, yend = cluster_1_size ),
linetype = "solid", color = "black", size = 1)
# 对 cluster 2 和 cluster 3 添加相同的分界线
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + cluster_2_size + 0.5, xend = cluster_1_size + cluster_2_size + 0.5, y = 0.5, yend = p + 0.5), linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + cluster_2_size + 0.5, yend = cluster_1_size + cluster_2_size + 0.5), linetype = "solid", color = "black", size = 1)
# 打印热图
print(heatmap_plot)
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size, xend = cluster_1_size, y = 0.5, yend = p + 0.5),
linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p, y = cluster_1_size , yend = cluster_1_size + 0.5),
linetype = "solid", color = "black", size = 1)
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
# 打印热图
print(heatmap_plot)
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size, xend = cluster_1_size, y = 0.5, yend = p + 0.5),
linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p, y = cluster_1_size , yend = cluster_1_size + 0.5),
linetype = "solid", color = "black", size = 1)
# 打印热图
print(heatmap_plot)
# 绘制热图
library(viridis)
library(RColorBrewer)
colors <- brewer.pal(9, "YlOrBr")
newa = melt(adj_aver_complete[final_order, final_order])
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + 0.5, xend = cluster_1_size + 0.5, y = 0.5, yend = p + 0.5),
linetype = "solid", color = "black") +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + 0.5, yend = cluster_1_size + 0.5),
linetype = "solid", color = "black")
# 打印热图
print(heatmap_plot)
library(viridis)
library(RColorBrewer)
colors <- brewer.pal(9, "YlOrBr")
newa = melt(adj_aver_complete[final_order, final_order])
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
# 打印热图
print(heatmap_plot)
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + 0.5, xend = cluster_1_size + 0.5, y = 0.5, yend = p + 0.5),
linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + 0.5, yend = cluster_1_size + 0.5),
linetype = "solid", color = "black", size = 1)
# 打印热图
print(heatmap_plot)
#heatmap_plot
cluster_1_size
# 绘制热图
library(viridis)
library(RColorBrewer)
colors <- brewer.pal(9, "YlOrBr")
newa = melt(adj_aver_complete[final_order, final_order])
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + 0.5, xend = cluster_1_size, y = 0.5, yend = p ),
linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p , y = cluster_1_size + 0.5, yend = cluster_1_size ),
linetype = "solid", color = "black", size = 1)
# 打印热图
print(heatmap_plot)
# 绘制热图
library(viridis)
library(RColorBrewer)
colors <- brewer.pal(9, "YlOrBr")
newa = melt(adj_aver_complete[final_order, final_order])
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
#heatmap_plot
p <- length(final_order)
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + 0.5, xend = cluster_1_size + 0.5, y = 0.5, yend = p + 0.5),
linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + 0.5, yend = cluster_1_size + 0.5),
linetype = "solid", color = "black", size = 1)
# 打印热图
print(heatmap_plot)
library(ggplot2)
library(reshape2)
X=graphs[81:(80+cid +3),,]
X=graphs[(80+cid+4):dim(graphs)[1],,]
adj_a = X[1,,]
for(i in 2:(dim(X)[1])){
adj_a = adj_a + X[i,,]
}
adj_aver = adj_a / (dim(X)[1])
# 找到全为0的列
zero_cols = which(apply(adj_aver, 2, function(col) all(col == 0)))
# non_zero_cols 是所有非零列
non_zero_cols = setdiff(1:dim(X)[2], zero_cols)
# Non zero columns 对应的 country
non_zero_country = country[non_zero_cols]
# 对非零列进行聚类
X_reduced = X[,-zero_cols,-zero_cols]
n_reduced = dim(X_reduced)[1]
p_reduced = dim(X_reduced)[2]
# 执行原本的聚类操作
ahat=matrix(rep(0,p_reduced^2),nrow=p_reduced)
bhat=ahat
Xlead=X_reduced[2:n_reduced,,]
for(j in 1:p_reduced){
for(k in j:p_reduced){
ahat[j,k]=sum(Xlead[,j,k]*(1-X_reduced[1:(n_reduced-1),j,k]))/(sum(1-X_reduced[1:(n_reduced-1),j,k])+.0001)
bhat[j,k]=sum((1-Xlead[,j,k])*X_reduced[1:(n_reduced-1),j,k])/(sum(X_reduced[1:(n_reduced-1),j,k])+.0001)
}
}
ahat=(ahat+t(ahat))-diag(diag(ahat))
bhat=(bhat+t(bhat))-diag(diag(bhat))
q=2
# Cluster
W1=ahat
W2=1-bhat
W1=W1-diag(diag(W1))
W2=W2-diag(diag(W2))
D1=apply(W1,1,sum)
D2=apply(W2,1,sum)
L1=diag(1/sqrt(D1+.000001))%*%W1%*%diag(1/sqrt(D1+.000001))
L2=diag(1/sqrt(D2+.000001))%*%W2%*%diag(1/sqrt(D2+.000001))
ev = eigen( L1 + L2  )
# Sort eigenvalues by absolute value
sorted_indices = order(abs(ev$values), decreasing = TRUE)
gamma = ev$vectors[, sorted_indices[1:q]]
km = kmeans(gamma, centers = q  , nstart = 1000)
nuhat = km$cluster
#
gamma=ev$vector[,1:q]
km<-kmeans(gamma,centers = q,nstart=100)
nuhat=km$cluster
which(nuhat==2)
cluster_1_size = sum(nuhat == 1)
cluster_2_size = sum(nuhat == 2)
cluster_3_size = sum(nuhat == 3)
non_zero_order = non_zero_cols[order(nuhat)]
# remove zero countries
final_order = non_zero_order
adj_aver_complete = adj_a / (dim(X)[1])
# plot heatmap
library(viridis)
library(RColorBrewer)
colors <- brewer.pal(9, "YlOrBr")
newa = melt(adj_aver_complete[final_order, final_order])
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
#heatmap_plot
p <- length(final_order)
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + 0.5, xend = cluster_1_size + 0.5, y = 0.5, yend = p + 0.5),
linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + 0.5, yend = cluster_1_size + 0.5),
linetype = "solid", color = "black", size = 1)
#print plot
print(heatmap_plot)
nuhat
q=2
# Cluster
W1=ahat
W2=1-bhat
W1=W1-diag(diag(W1))
W2=W2-diag(diag(W2))
D1=apply(W1,1,sum)
D2=apply(W2,1,sum)
L1=diag(1/sqrt(D1+.000001))%*%W1%*%diag(1/sqrt(D1+.000001))
L2=diag(1/sqrt(D2+.000001))%*%W2%*%diag(1/sqrt(D2+.000001))
ev = eigen( L1 + L2  )
# Sort eigenvalues by absolute value
sorted_indices = order(abs(ev$values), decreasing = TRUE)
gamma = ev$vectors[, sorted_indices[1:q]]
km = kmeans(gamma, centers = q  , nstart = 1000)
nuhat = km$cluster
#
gamma=ev$vector[,1:q]
km<-kmeans(gamma,centers = q,nstart=100)
nuhat=km$cluster
which(nuhat==2)
cluster_1_size = sum(nuhat == 1)
cluster_2_size = sum(nuhat == 2)
cluster_3_size = sum(nuhat == 3)
##if cluster 1 is smaller than cluster 2, then swap the labels
if(cluster_1_size < cluster_2_size){
nuhat[nuhat == 1] = 0
nuhat[nuhat == 2] = 1
nuhat[nuhat == 0] = 2
}
cluster_1_size = sum(nuhat == 1)
cluster_2_size = sum(nuhat == 2)
non_zero_order = non_zero_cols[order(nuhat)]
# remove zero countries
final_order = non_zero_order
adj_aver_complete = adj_a / (dim(X)[1])
# plot heatmap
library(viridis)
library(RColorBrewer)
colors <- brewer.pal(9, "YlOrBr")
newa = melt(adj_aver_complete[final_order, final_order])
heatmap_plot <- ggplot(newa, aes(Var1, Var2, fill = value)) +
geom_tile() +
#  scale_fill_gradientn(colors = colors) +
scale_fill_gradient2(low = "lightblue", high = "red", mid = "orange", midpoint =  0.5, limit = c(0, 1), space = "Lab", name = "Links") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "", y = "")
#heatmap_plot
p <- length(final_order)
heatmap_plot <- heatmap_plot +
geom_segment(aes(x = cluster_1_size + 0.5, xend = cluster_1_size + 0.5, y = 0.5, yend = p + 0.5),
linetype = "solid", color = "black", size = 1) +
geom_segment(aes(x = 0.5, xend = p + 0.5, y = cluster_1_size + 0.5, yend = cluster_1_size + 0.5),
linetype = "solid", color = "black", size = 1)
#print plot
print(heatmap_plot)

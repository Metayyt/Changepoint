estFinal_ps11[d]=theta_d[1]  ###estimate
estFinal_ps10[d]=theta_d[2]  ###estimate
estFinal_ps01[d]=theta_d[3]  ###estimate
CIFinal_ps11[d,]=theta_d[1] + c(-1,1)*qt(0.975,v[1])*sqrt(Td[1])  ###
CIFinal_ps10[d,]=theta_d[2] + c(-1,1)*qt(0.975,v[2])*sqrt(Td[2])  ###
CIFinal_ps01[d,]=theta_d[3] + c(-1,1)*qt(0.975,v[3])*sqrt(Td[3])  ###
sdFinal_ps11[d]=sqrt(Td[1])  ###standard error
sdFinal_ps10[d]=sqrt(Td[2])  ###standard error
sdFinal_ps01[d]=sqrt(Td[3])  ###standard error
theta_d=NULL
Wd=NULL
Bd=NULL
Td=NULL
v=NULL
### FOR ESTIMATES OF MU ###########
theta_d=c(mean(mu11[mu11!=0]), mean(mu10[mu10!=0]), mean(mu01[mu01!=0]), mean(mu00[mu00!=0]))
### within imputation variance
Wd=c(mean(mu11Wd[mu11Wd!=0]), mean(mu10Wd[mu10Wd!=0]), mean(mu01Wd[mu01Wd!=0]),mean(mu00Wd[mu00Wd!=0]))
###between imputation variance
Bd=(1/(numImput-1))*c(sum((mu11[mu11!=0]-mean(mu11[mu11!=0]))^2),
sum((mu10[mu10!=0]-mean(mu10[mu10!=0]))^2),
sum((mu01[mu01!=0]-mean(mu01[mu01!=0]))^2),
sum((mu00[mu00!=0]-mean(mu00[mu00!=0]))^2))
Bd
###total variability associated with mean
Td=Wd+(1+1/numImput)*Bd
Td
##degree of freedom
v=(numImput-1)*(1+(1/(1/numImput + 1))*(Wd/Bd))^2
mu_Estps11[d]=theta_d[1]  ###estimate
mu_Estps10[d]=theta_d[2]  ###estimate
mu_Estps01[d]=theta_d[3]  ###estimate
mu_Estps00[d]=theta_d[4]  ###estimate
mu_CIps11[d,]=theta_d[1] + c(-1,1)*qt(0.975,v[1])*sqrt(Td[1])  ###
mu_CIps10[d,]=theta_d[2] + c(-1,1)*qt(0.975,v[2])*sqrt(Td[2])  ###
mu_CIps01[d,]=theta_d[3] + c(-1,1)*qt(0.975,v[3])*sqrt(Td[3])  ###
mu_CIps00[d,]=theta_d[4] + c(-1,1)*qt(0.975,v[4])*sqrt(Td[4])  ###
mu_Sdps11[d]=sqrt(Td[1])  ###standard error
mu_Sdps10[d]=sqrt(Td[2])  ###standard error
mu_Sdps01[d]=sqrt(Td[3])  ###standard error
mu_Sdps00[d]=sqrt(Td[4])  ###standard error
numNon[d]=sum(as.numeric(estimate01==0))  ###number of samples not converged
##################################################################################################
##################################################################################################
########################Excluding the overlaps ###################################################
theta_d=NULL
Wd=NULL
Bd=NULL
Td=NULL
v=NULL
theta_d=c(mean(estimate11_all[estimate11_all!=0]), mean(estimate10_all[estimate10_all!=0]), mean(estimate01_all[estimate01_all!=0]))
### within imputation variance
Wd=c(mean(estimate11Wd_all[estimate11Wd_all!=0]), mean(estimate10Wd_all[estimate10Wd_all!=0]), mean(estimate01Wd_all[estimate01Wd_all!=0]))
###between imputation variance
Bd=(1/(numImput-1))*c(sum((estimate11_all[estimate11_all!=0]-mean(estimate11_all[estimate11_all!=0]))^2),
sum((estimate10_all[estimate10_all!=0]-mean(estimate10_all[estimate10_all!=0]))^2),
sum((estimate01_all[estimate01_all!=0]-mean(estimate01_all[estimate01_all!=0]))^2))
Bd
###total variability associated with mean
Td=Wd+(1+1/numImput)*Bd
Td
##degree of freedom
v=(numImput-1)*(1+(1/(1/numImput+1))*(Wd/Bd))^2
estFinal_ps11_all[d]=theta_d[1]  ###estimate
estFinal_ps10_all[d]=theta_d[2]  ###estimate
estFinal_ps01_all[d]=theta_d[3]  ###estimate
CIFinal_ps11_all[d,]=theta_d[1] + c(-1,1)*qt(0.975,v[1])*sqrt(Td[1])  ###
CIFinal_ps10_all[d,]=theta_d[2] + c(-1,1)*qt(0.975,v[2])*sqrt(Td[2])  ###
CIFinal_ps01_all[d,]=theta_d[3] + c(-1,1)*qt(0.975,v[3])*sqrt(Td[3])  ###
sdFinal_ps11_all[d]=sqrt(Td[1])  ###standard error
sdFinal_ps10_all[d]=sqrt(Td[2])  ###standard error
sdFinal_ps01_all[d]=sqrt(Td[3])  ###standard error
#################################
theta_d=NULL
Wd=NULL
Bd=NULL
Td=NULL
v=NULL
### FOR ESTIMATES OF MU ###########
theta_d=c(mean(mu11_all[mu11_all!=0]), mean(mu10_all[mu10_all!=0]), mean(mu01_all[mu01_all!=0]), mean(mu00_all[mu00_all!=0]))
### within imputation variance
Wd=c(mean(mu11Wd_all[mu11Wd_all!=0]), mean(mu10Wd_all[mu10Wd_all!=0]), mean(mu01Wd_all[mu01Wd_all!=0]),mean(mu00Wd_all[mu00Wd_all!=0]))
###between imputation variance
Bd=(1/(numImput-1))*c(sum((mu11_all[mu11_all!=0]-mean(mu11_all[mu11_all!=0]))^2),
sum((mu10_all[mu10_all!=0]-mean(mu10_all[mu10_all!=0]))^2),
sum((mu01_all[mu01_all!=0]-mean(mu01_all[mu01_all!=0]))^2),
sum((mu00_all[mu00_all!=0]-mean(mu00_all[mu00_all!=0]))^2))
Bd
###total variability associated with mean
Td=Wd+(1+1/numImput)*Bd
Td
##degree of freedom
v=(numImput-1)*(1+(1/(1/numImput + 1))*(Wd/Bd))^2
mu_Estps11_all[d]=theta_d[1]  ###estimate
mu_Estps10_all[d]=theta_d[2]  ###estimate
mu_Estps01_all[d]=theta_d[3]  ###estimate
mu_Estps00_all[d]=theta_d[4]  ###estimate
mu_CIps11_all[d,]=theta_d[1] + c(-1,1)*qt(0.975,v[1])*sqrt(Td[1])  ###
mu_CIps10_all[d,]=theta_d[2] + c(-1,1)*qt(0.975,v[2])*sqrt(Td[2])  ###
mu_CIps01_all[d,]=theta_d[3] + c(-1,1)*qt(0.975,v[3])*sqrt(Td[3])  ###
mu_CIps00_all[d,]=theta_d[4] + c(-1,1)*qt(0.975,v[4])*sqrt(Td[4])  ###
mu_Sdps11_all[d]=sqrt(Td[1])  ###standard error
mu_Sdps10_all[d]=sqrt(Td[2])  ###standard error
mu_Sdps01_all[d]=sqrt(Td[3])  ###standard error
mu_Sdps00_all[d]=sqrt(Td[4])  ###standard error
resultTable=data.frame(estFinal_ps11, estFinal_ps10, estFinal_ps01, sdFinal_ps11,
sdFinal_ps10, sdFinal_ps01, CIFinal_ps11,CIFinal_ps10, CIFinal_ps01,
mu_Estps11, mu_Estps10, mu_Estps01,mu_Estps00,
mu_Sdps11, mu_Sdps10,mu_Sdps01,mu_Sdps00,
mu_CIps11, mu_CIps10, mu_CIps01, mu_CIps00, numNon, sampleNum)
resultTable[14,]
#################
resultTable_all=data.frame(estFinal_ps11_all, estFinal_ps10_all, estFinal_ps01_all, sdFinal_ps11_all,
sdFinal_ps10_all, sdFinal_ps01_all, CIFinal_ps11_all,CIFinal_ps10_all, CIFinal_ps01_all,
mu_Estps11_all, mu_Estps10_all, mu_Estps01_all,mu_Estps00_all,
mu_Sdps11_all, mu_Sdps10_all, mu_Sdps01_all, mu_Sdps00_all,
mu_CIps11_all, mu_CIps10_all, mu_CIps01_all, mu_CIps00_all, numNon, sampleNum)
resultTable_all[d,]
### weight truncation in AIPTW and IPTW, restricting to overlap regions in PENCOMP
DIREC="M:/Private/Rpackage_v3/resubmission_round4/codes/Application/Results/"### where results from allMethodRun.R are stored
#####After running allMethodRun.R, run the following script to reproduce Figure 10 in the main text.
###########load the results
tableAIPTW=read.table(paste0(DIREC, "tableAIPTW_truncate.txt"), header = T)
tableIPTW=read.table(paste0(DIREC, "tableIPTW_truncate.txt"), header = T)
tablePENCOMP=read.table(paste0(DIREC, "tablePENCOMP.txt"), header = T)
tableNaive=read.table(paste0(DIREC, "tableNaive.txt"), header = T)
tableGcompute=read.table(paste0(DIREC, "tableGcompute.txt"), header = T)
################AIPTW ###################################################################################
aiptw=tableAIPTW[, c(1, 2, 5, 6, 9, 10)] ###keep only the estimate and se of delta11 delta10, delta01
################PENCOMP###################################################################################
pencomp=tablePENCOMP[, c(1, 2, 5, 6, 9, 10)]
#################################################################################
naive=tableNaive[, c(1, 2, 5, 6, 9, 10)]
################iptw###################################################################################
iptw=tableIPTW[, c(1, 2, 5, 6, 9, 10)]
################g computation###################################################################################
gcompute=tableGcompute[, c(1, 2, 5, 6, 9, 10)]
par(mfrow = c(3,2),
oma = c(2,2,3,2) + 0.1,
mar = c(2,0.5,0,0) + 0.1, cex.main = 1.5)
index=1  ###estimate delta11
maxMin=c(-12,2)
time=c(1:15)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 2, at =c(-10, -8, -6, -4, -2, 0, 2), tck = -0.03, labels = c(-10, -8, -6, -4, -2, 0, 2))
abline(h=0)
#mtext(expression(bold(paste("Estimates"))), line = 1.5, at=2, side=3)
mtext(expression(bold(paste(Delta, "11"))), line = 0, at=8, side=3)
#####################SE plots ###########################################
index=2  ###se of estimate delta11
maxMin=c(0,3)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 4, at = seq(0,10), tck = -0.03, labels =seq(0, 10))
mtext(expression(bold(paste("SE11"))), line = 0, at=8, side=3)
###########################################################################
index=3  ##estimate delta10
maxMin=c(-15,3)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 2, at =c(-15, -10, -5, 0, 5), tck = -0.03, labels = c(-15, -10, -5, 0, 5))
abline(h=0)
mtext(expression(bold(paste(Delta, "10"))), line = 0, at=8, side=3)
#####################SE plots ###########################################
index=4  ###se of estimate delta10
maxMin=c(0,4)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 4, at = seq(0,4), tck = -0.03, labels =seq(0, 4))
mtext(expression(bold(paste("SE10"))), line = 0, at=8, side=3)
###########################################################################
index=5  ###estimate delta01
maxMin=c(-10,3)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 2, at =c(-10, -5, 0, 5), tck = -0.03, labels = c(-10, -5, 0, 5))
abline(h=0)
mtext(expression(bold(paste(Delta, "01"))), line = 0, at=8, side=3)
axis(side = 1, at = seq(1:16), labels = seq(1:16), tck = -0.01, las=2)
#####################SE plots ###########################################
index=6 ###se of estimate of delta01
maxMin=c(0,5)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 4, at = seq(0,10), tck = -0.03, labels =seq(0, 10))
mtext(expression(bold(paste("SE01"))), line = 0, at=8, side=3)
axis(side = 1, at = seq(1:16), labels = seq(1:16), tck = -0.01, las=2)
DIREC="M:/Private/Rpackage_v3/resubmission_round4/codes/Application/Results/"### where results from allMethodRun.R are stored
#####After running allMethodRun.R, run the following script to reproduce Figure 10 in the main text.
###########load the results
tableAIPTW=read.table(paste0(DIREC, "tableAIPTW_truncate.txt"), header = T)
tableIPTW=read.table(paste0(DIREC, "tableIPTW_truncate.txt"), header = T)
tablePENCOMP=read.table(paste0(DIREC, "tablePENCOMP_truncate.txt"), header = T)
tableNaive=read.table(paste0(DIREC, "tableNaive.txt"), header = T)
tableGcompute=read.table(paste0(DIREC, "tableGcompute.txt"), header = T)
################AIPTW ###################################################################################
aiptw=tableAIPTW[, c(1, 2, 5, 6, 9, 10)] ###keep only the estimate and se of delta11 delta10, delta01
################PENCOMP###################################################################################
pencomp=tablePENCOMP[, c(1, 2, 5, 6, 9, 10)]
#################################################################################
naive=tableNaive[, c(1, 2, 5, 6, 9, 10)]
################iptw###################################################################################
iptw=tableIPTW[, c(1, 2, 5, 6, 9, 10)]
################g computation###################################################################################
gcompute=tableGcompute[, c(1, 2, 5, 6, 9, 10)]
par(mfrow = c(3,2),
oma = c(2,2,3,2) + 0.1,
mar = c(2,0.5,0,0) + 0.1, cex.main = 1.5)
index=1  ###estimate delta11
maxMin=c(-12,2)
time=c(1:15)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 2, at =c(-10, -8, -6, -4, -2, 0, 2), tck = -0.03, labels = c(-10, -8, -6, -4, -2, 0, 2))
abline(h=0)
#mtext(expression(bold(paste("Estimates"))), line = 1.5, at=2, side=3)
mtext(expression(bold(paste(Delta, "11"))), line = 0, at=8, side=3)
#####################SE plots ###########################################
index=2  ###se of estimate delta11
maxMin=c(0,3)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 4, at = seq(0,10), tck = -0.03, labels =seq(0, 10))
mtext(expression(bold(paste("SE11"))), line = 0, at=8, side=3)
###########################################################################
index=3  ##estimate delta10
maxMin=c(-15,3)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 2, at =c(-15, -10, -5, 0, 5), tck = -0.03, labels = c(-15, -10, -5, 0, 5))
abline(h=0)
mtext(expression(bold(paste(Delta, "10"))), line = 0, at=8, side=3)
#####################SE plots ###########################################
index=4  ###se of estimate delta10
maxMin=c(0,4)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 4, at = seq(0,4), tck = -0.03, labels =seq(0, 4))
mtext(expression(bold(paste("SE10"))), line = 0, at=8, side=3)
###########################################################################
index=5  ###estimate delta01
maxMin=c(-10,3)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 2, at =c(-10, -5, 0, 5), tck = -0.03, labels = c(-10, -5, 0, 5))
abline(h=0)
mtext(expression(bold(paste(Delta, "01"))), line = 0, at=8, side=3)
axis(side = 1, at = seq(1:16), labels = seq(1:16), tck = -0.01, las=2)
#####################SE plots ###########################################
index=6 ###se of estimate of delta01
maxMin=c(0,5)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 4, at = seq(0,10), tck = -0.03, labels =seq(0, 10))
mtext(expression(bold(paste("SE01"))), line = 0, at=8, side=3)
axis(side = 1, at = seq(1:16), labels = seq(1:16), tck = -0.01, las=2)
#### THIS COMBINES THE RESULTS TOGETHER TO PRODUCE FIGURE 10
### NO restricting to overlap regions in PENCOMP and weight truncation in AIPTW and IPTW
DIREC="M:/Private/Rpackage_v3/resubmission_round4/codes/Application/Results/"### where results from allMethodRun.R are stored
#####After running allMethodRun.R, run the following script to reproduce Figure 10 in the main text.
###########load the results
tableAIPTW=read.table(paste0(DIREC, "tableAIPTW.txt"), header = T)
tableIPTW=read.table(paste0(DIREC, "tableIPTW.txt"), header = T)
tablePENCOMP=read.table(paste0(DIREC, "tablePENCOMP.txt"), header = T)
tableNaive=read.table(paste0(DIREC, "tableNaive.txt"), header = T)
tableGcompute=read.table(paste0(DIREC, "tableGcompute.txt"), header = T)
################AIPTW ###################################################################################
aiptw=tableAIPTW[, c(1, 2, 5, 6, 9, 10)] ###keep only the estimate and se of delta11 delta10, delta01
################PENCOMP###################################################################################
pencomp=tablePENCOMP[, c(1, 2, 5, 6, 9, 10)]
#################################################################################
naive=tableNaive[, c(1, 2, 5, 6, 9, 10)]
################iptw###################################################################################
iptw=tableIPTW[, c(1, 2, 5, 6, 9, 10)]
################g computation###################################################################################
gcompute=tableGcompute[, c(1, 2, 5, 6, 9, 10)]
par(mfrow = c(3,2),
oma = c(2,2,3,2) + 0.1,
mar = c(2,0.5,0,0) + 0.1, cex.main = 1.5)
index=1  ###estimate delta11
maxMin=c(-12,17)
time=c(1:15)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 2, at =c(-10, -5, 0, 5, 10, 15), tck = -0.03, labels = c(-10, -5, 0, 5, 10, 15))
abline(h=0)
#mtext(expression(bold(paste("Estimates"))), line = 1.5, at=2, side=3)
mtext(expression(bold(paste(Delta, "11"))), line = 0, at=8, side=3)
#####################SE plots ###########################################
index=2  ##se of estimate delta11
maxMin=c(0,8)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 4, at = seq(0,10), tck = -0.03, labels =seq(0, 10))
mtext(expression(bold(paste("SE11"))), line = 0, at=8, side=3)
arrows(10, max(maxMin)-0.5, 10, max(maxMin), length=0.1)
text(11, max(maxMin)-1, paste("AIPTW=",round(as.numeric(aiptw[10,index]),0)), col="blue")
arrows(9, max(maxMin)-0.5, 9, max(maxMin), length=0.1)
text(7.7, max(maxMin)-1, paste("AIPTW=",round(as.numeric(aiptw[9,index]),0)), col="blue")
###########################################################################
index=3  ###estimate of delta10
maxMin=c(-15,10)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 2, at =c(-15, -10, -5, 0, 5, 10), tck = -0.03, labels = c(-15, -10, -5, 0, 5, 10))
abline(h=0)
mtext(expression(bold(paste(Delta, "10"))), line = 0, at=8, side=3)
#####################SE plots ###########################################
index=4 ###se of estimate of delta10
maxMin=c(0,9)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 4, at = seq(0,10), tck = -0.03, labels =seq(0, 10))
mtext(expression(bold(paste("SE10"))), line = 0, at=8, side=3)
arrows(10, max(maxMin)-0.5, 10, max(maxMin), length=0.1)
text(11, max(maxMin)-1, paste("AIPTW=",round(as.numeric(aiptw[10,index]),0)), col="blue")
arrows(9, max(maxMin)-0.5, 9, max(maxMin), length=0.1)
text(7.8, max(maxMin)-1, paste("AIPTW=",round(as.numeric(aiptw[9,index]),0)), col="blue")
###########################################################################
index=5  ###estimate of delta01
maxMin=c(-10,11)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 2, at =c(-10, -5, 0, 5, 10), tck = -0.03, labels = c(-10, -5, 0, 5, 10))
abline(h=0)
mtext(expression(bold(paste(Delta, "01"))), line = 0, at=8, side=3)
axis(side = 1, at = seq(1:15), labels = seq(1:15), tck = -0.01, las=2)
#####################SE plots ###########################################
index=6  ###se of estimate delta01
maxMin=c(0,10)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 4, at = seq(0,10), tck = -0.03, labels =seq(0, 10))
mtext(expression(bold(paste("SE01"))), line = 0, at=8, side=3)
axis(side = 1, at = seq(1:15), labels = seq(1:15), tck = -0.01, las=2)
arrows(4, max(maxMin)-0.5, 4, max(maxMin), length=0.1)
text(4, max(maxMin)-1.5, paste("AIPTW=",round(as.numeric(aiptw[4,index]),0)), col="blue")
arrows(10, max(maxMin)-0.5, 10, max(maxMin), length=0.1)
text(11, max(maxMin)-1, paste("AIPTW=",round(as.numeric(aiptw[10,index]),0)), col="blue")
arrows(9, max(maxMin)-0.5, 9, max(maxMin), length=0.1)
text(9, max(maxMin)-1.9, paste("AIPTW=",round(as.numeric(aiptw[9,index]),0)), col="blue")
arrows(8, max(maxMin)-0.5, 8, max(maxMin), length=0.1)
text(7, max(maxMin)-1, paste("AIPTW=",round(as.numeric(aiptw[8,index]),0)), col="blue")
rm(list=ls())
#### THIS produces Figure 11 in the appendix
### weight truncation in AIPTW and IPTW, restricting to overlap regions in PENCOMP
DIREC="M:/Private/Rpackage_v3/resubmission_round4/codes/Application/Results/"### where results from allMethodRun.R are stored
#####After running allMethodRun.R, run the following script to reproduce Figure 10 in the main text.
###########load the results
tableAIPTW=read.table(paste0(DIREC, "tableAIPTW_truncate.txt"), header = T)
tableIPTW=read.table(paste0(DIREC, "tableIPTW_truncate.txt"), header = T)
tablePENCOMP=read.table(paste0(DIREC, "tablePENCOMP_truncate.txt"), header = T)
tableNaive=read.table(paste0(DIREC, "tableNaive.txt"), header = T)
tableGcompute=read.table(paste0(DIREC, "tableGcompute.txt"), header = T)
################AIPTW ###################################################################################
aiptw=tableAIPTW[, c(1, 2, 5, 6, 9, 10)] ###keep only the estimate and se of delta11 delta10, delta01
################PENCOMP###################################################################################
pencomp=tablePENCOMP[, c(1, 2, 5, 6, 9, 10)]
#################################################################################
naive=tableNaive[, c(1, 2, 5, 6, 9, 10)]
################iptw###################################################################################
iptw=tableIPTW[, c(1, 2, 5, 6, 9, 10)]
################g computation###################################################################################
gcompute=tableGcompute[, c(1, 2, 5, 6, 9, 10)]
par(mfrow = c(3,2),
oma = c(2,2,3,2) + 0.1,
mar = c(2,0.5,0,0) + 0.1, cex.main = 1.5)
index=1  ###estimate delta11
maxMin=c(-12,2)
time=c(1:15)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 2, at =c(-10, -8, -6, -4, -2, 0, 2), tck = -0.03, labels = c(-10, -8, -6, -4, -2, 0, 2))
abline(h=0)
#mtext(expression(bold(paste("Estimates"))), line = 1.5, at=2, side=3)
mtext(expression(bold(paste(Delta, "11"))), line = 0, at=8, side=3)
#####################SE plots ###########################################
index=2  ###se of estimate delta11
maxMin=c(0,3)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 4, at = seq(0,10), tck = -0.03, labels =seq(0, 10))
mtext(expression(bold(paste("SE11"))), line = 0, at=8, side=3)
###########################################################################
index=3  ##estimate delta10
maxMin=c(-15,3)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 2, at =c(-15, -10, -5, 0, 5), tck = -0.03, labels = c(-15, -10, -5, 0, 5))
abline(h=0)
mtext(expression(bold(paste(Delta, "10"))), line = 0, at=8, side=3)
#####################SE plots ###########################################
index=4  ###se of estimate delta10
maxMin=c(0,4)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 4, at = seq(0,4), tck = -0.03, labels =seq(0, 4))
mtext(expression(bold(paste("SE10"))), line = 0, at=8, side=3)
###########################################################################
index=5  ###estimate delta01
maxMin=c(-10,3)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 2, at =c(-10, -5, 0, 5), tck = -0.03, labels = c(-10, -5, 0, 5))
abline(h=0)
mtext(expression(bold(paste(Delta, "01"))), line = 0, at=8, side=3)
axis(side = 1, at = seq(1:16), labels = seq(1:16), tck = -0.01, las=2)
#####################SE plots ###########################################
index=6 ###se of estimate of delta01
maxMin=c(0,5)
plot(time,as.numeric(pencomp[,index]), pch=17, ylim=maxMin, col="red", xaxt='n',yaxt='n',
main="", adj=0, cex=2, cex.axis=0.85)
points(time, as.numeric(aiptw[,index]), pch=8, col="blue",  cex=2)
points(time, as.numeric(gcompute[,index]), pch=1, col="black", cex=2)
points(time, as.numeric(iptw[,index]), pch=22, col="green4", cex=2)
points(time, as.numeric(naive[,index]), pch=3, col="navy", cex=2)
axis(side = 4, at = seq(0,10), tck = -0.03, labels =seq(0, 10))
mtext(expression(bold(paste("SE01"))), line = 0, at=8, side=3)
axis(side = 1, at = seq(1:16), labels = seq(1:16), tck = -0.01, las=2)
